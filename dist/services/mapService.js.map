{"version":3,"sources":["../../src/services/mapService.js"],"names":["mapService","width","height","tileWidth","tileHeight","map","Map","ctx","sprites","x","y","value","grid","min","Math","round","max","setGrid","parts","agd","building","garden","food","floor","console","log","sprite","drawSprite","drawImage","packages","store","document","getElementById","storeul","ul","createElement","remove","id","appendChild","length","position","package","li","innerHTML","weight","fork","forklift"],"mappings":"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","file":"mapService.js","sourcesContent":["import Map from '../models/map.js';\r\n\r\nexport default class mapService{\r\n    constructor(width, height, tileWidth, tileHeight){\r\n        this.map = new Map(width,height,tileWidth,tileHeight);\r\n        this.ctx = null;\r\n        this.sprites = null;\r\n    }\r\n\r\n    getWidth(){\r\n        return this.map.width * this.map.tileWidth;\r\n    }\r\n\r\n    getHeight(){\r\n        return this.map.height * this.map.tileHeight;\r\n    }\r\n\r\n    //update map\r\n    setGrid(x,y,value){\r\n        this.map.grid[x][y] = value;\r\n    }\r\n\r\n    //init map\r\n    init(){\r\n        let min = Math.round(this.map.width * 0.25);\r\n        let max = Math.round(this.map.height * 0.75) - 1;\r\n\r\n        for(var x=0; x < this.map.width; x++){\r\n            this.map.grid[x]= [];\r\n            for(var y=0;y < this.map.height; y++){\r\n                if(y > max){\r\n                    if(x < min)\r\n                        this.setGrid(x,y,this.map.parts.agd);\r\n                    else if(x < min*2)\r\n                        this.setGrid(x,y,this.map.parts.building);\r\n                    else if(x > max)\r\n                        this.setGrid(x,y,this.map.parts.garden);\r\n                    else\r\n                        this.setGrid(x,y,this.map.parts.food);\r\n                }\r\n                else\r\n                    this.setGrid(x,y,this.map.parts.floor);\r\n            }\r\n        }\r\n        console.log(this.map.grid)    \r\n        return this.map.grid;\r\n    }\r\n\r\n    //draw base map\r\n    drawMap(){\r\n        let sprite = null;\r\n\r\n        for(var x = 0; x < this.map.width; x++){\r\n            for(var y = 0; y < this.map.height; y++){\r\n                switch(this.map.grid[x][y]){\r\n                    case this.map.parts.food:\r\n                        sprite = this.map.parts.food;\r\n                        break;\r\n                    case this.map.parts.building:\r\n                        sprite = this.map.parts.building;\r\n                        break;\r\n                    case this.map.parts.agd:\r\n                        sprite = this.map.parts.agd;\r\n                        break;\r\n                    case this.map.parts.garden:\r\n                        sprite = this.map.parts.garden;\r\n                        break;\r\n                    default:\r\n                        sprite = this.map.parts.floor;\r\n                        break;\r\n                }\r\n                this.drawSprite(x,y,sprite);\r\n            }\r\n        }\r\n    }\r\n\r\n    //draw sprite\r\n    drawSprite(x,y,sprite){\r\n        this.ctx.drawImage(\r\n            this.sprites,\r\n            sprite*this.map.tileWidth, 0,\r\n            this.map.tileWidth, this.map.tileHeight,\r\n            x*this.map.tileWidth,y*this.map.tileHeight,\r\n            this.map.tileWidth, this.map.tileHeight\r\n        );\r\n    }\r\n\r\n    //draw package\r\n    drawPackage(packages){\r\n\r\n        let store = document.getElementById('store');\r\n        let storeul = document.getElementById('storeul')\r\n        let ul = document.createElement('ul');\r\n\r\n        storeul.remove();\r\n        ul.id = 'storeul'\r\n        store.appendChild(ul);\r\n\r\n        for(var x = 0; x < packages.length; x++){\r\n            if(!this.map.grid[packages[x].position.x][packages[x].position.y] == this.map.parts.package)\r\n                this.setGrid(packages[x].position.x, packages[x].position.y, this.map.parts.floor);\r\n\r\n            this.setGrid(packages[x].position.x, packages[x].position.y, this.map.parts.package);\r\n            this.drawSprite(packages[x].position.x, packages[x].position.y, this.map.parts.package);\r\n\r\n            let li = document.createElement('li');\r\n            ul.appendChild(li);\r\n\r\n            li.innerHTML += 'Package (' + \r\n            packages[x].width + 'x' + \r\n            packages[x].length + 'x' + \r\n            packages[x].height + ', ' +\r\n            packages[x].weight + ' kg' +\r\n            ' x: ' + packages[x].position.x + \r\n            ' y: ' + packages[x].position.y + ')';\r\n        }\r\n    }\r\n\r\n    //draw forklift\r\n    drawForklift(fork){\r\n        console.log(\"elo\");\r\n        this.setGrid(fork.position.x,fork.position.y, this.map.parts.forklift);\r\n        this.drawSprite(fork.position.x, fork.position.y, this.map.parts.forklift);\r\n        console.log(this.map.grid);\r\n    }\r\n}"]}